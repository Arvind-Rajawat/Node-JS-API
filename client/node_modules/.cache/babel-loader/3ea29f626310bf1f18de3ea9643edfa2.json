{"ast":null,"code":"import { Component } from 'react'; // let's also import Component\n// the clock's state has one field: The current time, based upon the\n// JavaScript class Date\n\n// Clock has no properties, but the current state is of type ClockState\n// The generic parameters in the Component typing allow to pass props\n// and state. Since we don't have props, we pass an empty object.\nexport class Clock extends Component {\n  // The tick function sets the current state. TypeScript will let us know\n  // which ones we are allowed to set.\n  tick() {\n    this.setState({\n      time: new Date()\n    });\n  } // Before the component mounts, we initialise our state\n\n\n  componentWillMount() {\n    this.tick();\n  } // After the component did mount, we set the state each second.\n\n\n  componentDidMount() {\n    setInterval(() => this.tick(), 1000);\n  } // render will know everything!\n\n\n  render() {\n    return \"Fine\";\n  }\n\n}\nexport default Clock;","map":{"version":3,"sources":["D:/cricket-scoreboard/client/src/App.tsx"],"names":["Component","Clock","tick","setState","time","Date","componentWillMount","componentDidMount","setInterval","render"],"mappings":"AAAA,SAAgBA,SAAhB,QAAiC,OAAjC,C,CAA0C;AAE1C;AACA;;AAKA;AACA;AACA;AACA,OAAO,MAAMC,KAAN,SAAoBD,SAApB,CAA8C;AAEnD;AACA;AACAE,EAAAA,IAAI,GAAG;AACL,SAAKC,QAAL,CAAc;AACZC,MAAAA,IAAI,EAAE,IAAIC,IAAJ;AADM,KAAd;AAGD,GARkD,CAUnD;;;AACAC,EAAAA,kBAAkB,GAAG;AACnB,SAAKJ,IAAL;AACD,GAbkD,CAenD;;;AACAK,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,WAAW,CAAC,MAAM,KAAKN,IAAL,EAAP,EAAoB,IAApB,CAAX;AACD,GAlBkD,CAoBnD;;;AACAO,EAAAA,MAAM,GAAG;AACP,WAAO,MAAP;AACD;;AAvBkD;AAyBrD,eAAeR,KAAf","sourcesContent":["import React, { Component } from 'react'; // let's also import Component\r\n\r\n// the clock's state has one field: The current time, based upon the\r\n// JavaScript class Date\r\ntype ClockState = {\r\n  time: Date\r\n}\r\n\r\n// Clock has no properties, but the current state is of type ClockState\r\n// The generic parameters in the Component typing allow to pass props\r\n// and state. Since we don't have props, we pass an empty object.\r\nexport class Clock extends Component<{}, ClockState> {\r\n\r\n  // The tick function sets the current state. TypeScript will let us know\r\n  // which ones we are allowed to set.\r\n  tick() {\r\n    this.setState({\r\n      time: new Date()\r\n    });\r\n  }\r\n\r\n  // Before the component mounts, we initialise our state\r\n  componentWillMount() {\r\n    this.tick();\r\n  }\r\n\r\n  // After the component did mount, we set the state each second.\r\n  componentDidMount() {\r\n    setInterval(() => this.tick(), 1000);\r\n  }\r\n\r\n  // render will know everything!\r\n  render() {\r\n    return \"Fine\"\r\n  }\r\n}\r\nexport default Clock"]},"metadata":{},"sourceType":"module"}